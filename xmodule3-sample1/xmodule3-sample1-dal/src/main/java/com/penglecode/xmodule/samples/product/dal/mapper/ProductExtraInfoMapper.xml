<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.penglecode.xmodule.samples.product.dal.mapper.ProductExtraInfoMapper">

    <!-- Auto-Generation Code Start -->
    <!--
        注意事项：
        1、代码生成器自动生成的代码尽量不要轻易修改!!! 如有修改则在重新生成时需要仔细比对合并，以防止代码覆盖问题发生!!!
        2、代码生成器自动生成的代码无法满足需求时，例如自定义的复杂统计查询，请严格写在最下的Customized Code区域，这样重新生成代码时也容易做合并!!!
    -->

    <sql id="SelectBaseColumnsClause">
        <trim suffixOverrides=",">
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'productId')">
                t.product_id   productId,
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'productDetails')">
                t.product_details   productDetails,
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'productSpecifications')">
                t.product_specifications   productSpecifications,
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'productServices')">
                t.product_services   productServices,
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'createTime')">
                DATE_FORMAT(t.create_time, '%Y-%m-%d %T')   createTime,
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'updateTime')">
                DATE_FORMAT(t.update_time, '%Y-%m-%d %T')   updateTime,
            </if>
        </trim>
    </sql>

    <sql id="UpdateDynamicColumnsClause">
        <trim suffixOverrides=",">
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'productDetails')">
                t.product_details = #{columns.productDetails, jdbcType=VARCHAR},
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'productSpecifications')">
                t.product_specifications = #{columns.productSpecifications, jdbcType=VARCHAR},
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'productServices')">
                t.product_services = #{columns.productServices, jdbcType=VARCHAR},
            </if>
            <if test="@com.penglecode.xmodule.common.mybatis.MapperHelper@containsColumn(columns, 'updateTime')">
                t.update_time = #{columns.updateTime, jdbcType=VARCHAR},
            </if>
        </trim>
    </sql>

    <insert id="insertModel" keyProperty="productId" parameterType="ProductExtraInfo" statementType="PREPARED" useGeneratedKeys="true">
        INSERT INTO t_product_extra_info(
            product_id,
            product_details,
            product_specifications,
            product_services,
            create_time,
            update_time
        ) VALUES (
            #{productId, jdbcType=BIGINT},
            #{productDetails, jdbcType=VARCHAR},
            #{productSpecifications, jdbcType=VARCHAR},
            #{productServices, jdbcType=VARCHAR},
            #{createTime, jdbcType=VARCHAR},
            #{updateTime, jdbcType=VARCHAR}
        )
    </insert>

    <update id="updateModelById" parameterType="java.util.Map" statementType="PREPARED">
        UPDATE t_product_extra_info t
           SET <include refid="UpdateDynamicColumnsClause"/>
         WHERE t.product_id = #{id, jdbcType=BIGINT}
    </update>

    <update id="updateModelByCriteria" parameterType="java.util.Map" statementType="PREPARED">
        UPDATE t_product_extra_info t
           SET <include refid="UpdateDynamicColumnsClause"/>
        <include refid="CommonMybatisMapper.CommonWhereCriteriaClause"/>
    </update>

    <delete id="deleteModelById" parameterType="java.util.Map" statementType="PREPARED">
        DELETE t FROM t_product_extra_info t
         WHERE t.product_id = #{id, jdbcType=BIGINT}
    </delete>

    <delete id="deleteModelByIds" parameterType="java.util.Map" statementType="PREPARED">
        DELETE t FROM t_product_extra_info t
         WHERE t.product_id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id, jdbcType=BIGINT}
        </foreach>
    </delete>

    <delete id="deleteModelByCriteria" parameterType="java.util.Map" statementType="PREPARED">
        DELETE t FROM t_product_extra_info t
        <include refid="CommonMybatisMapper.CommonWhereCriteriaClause"/>
    </delete>

    <select id="selectModelById" parameterType="java.util.Map" resultType="ProductExtraInfo" statementType="PREPARED">
        SELECT <include refid="SelectBaseColumnsClause"/>
          FROM t_product_extra_info t
         WHERE t.product_id = #{id, jdbcType=BIGINT}
    </select>

    <select id="selectModelByCriteria" parameterType="java.util.Map" resultType="ProductExtraInfo" statementType="PREPARED">
        SELECT <include refid="SelectBaseColumnsClause"/>
          FROM t_product_extra_info t
        <include refid="CommonMybatisMapper.CommonWhereCriteriaClause"/>
    </select>

    <select id="selectModelCountByCriteria" parameterType="java.util.Map" resultType="java.lang.Integer" statementType="PREPARED">
        SELECT COUNT(*)
          FROM t_product_extra_info t
        <include refid="CommonMybatisMapper.CommonWhereCriteriaClause"/>
    </select>

    <select id="selectModelListByIds" parameterType="java.util.Map" resultType="ProductExtraInfo" statementType="PREPARED">
        SELECT <include refid="SelectBaseColumnsClause"/>
          FROM t_product_extra_info t
         WHERE t.product_id in
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id, jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="selectAllModelList" parameterType="java.util.Map" resultType="ProductExtraInfo" resultSetType="FORWARD_ONLY" fetchSize="1000" statementType="PREPARED">
        SELECT <include refid="SelectBaseColumnsClause"/>
          FROM t_product_extra_info t
    </select>

    <select id="selectAllModelCount" parameterType="java.util.Map" resultType="java.lang.Integer" statementType="PREPARED">
        SELECT COUNT(*) FROM t_product_extra_info t
    </select>

    <select id="selectModelListByCriteria" parameterType="java.util.Map" resultType="ProductExtraInfo" statementType="PREPARED">
        SELECT <include refid="SelectBaseColumnsClause"/>
          FROM t_product_extra_info t
        <include refid="CommonMybatisMapper.CommonWhereCriteriaClause"/>
        <include refid="CommonMybatisMapper.CommonOrderByCriteriaClause"/>
    </select>

    <select id="selectModelPageListByCriteria" parameterType="java.util.Map" resultType="ProductExtraInfo" statementType="PREPARED">
        SELECT <include refid="SelectBaseColumnsClause"/>
          FROM t_product_extra_info t
        <include refid="CommonMybatisMapper.CommonWhereCriteriaClause"/>
        <include refid="CommonMybatisMapper.CommonOrderByCriteriaClause"/>
    </select>

    <select id="selectModelPageCountByCriteria" parameterType="java.util.Map" resultType="java.lang.Integer" statementType="PREPARED">
        SELECT COUNT(*)
          FROM t_product_extra_info t
        <include refid="CommonMybatisMapper.CommonWhereCriteriaClause"/>
    </select>
    <!-- Auto-Generation Code End -->

    <!-- Customized Code Start -->
    <!-- 自定义的代码请严格写在该区域内!!! -->


    <!-- Customized Code End -->
</mapper>