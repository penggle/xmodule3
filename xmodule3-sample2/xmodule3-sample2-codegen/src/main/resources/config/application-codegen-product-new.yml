spring:
    #代码生成配置
    codegen:
        config:
            #模块名称
            product:
                #领域对象配置
                domain:
                    #领域对象公共配置
                    domainCommons:
                        #注释作者
                        commentAuthor: AutoCodeGenerator
                        #领域对象源码输出项目目录
                        targetProject: src/main/java
                        #领域对象源码输出公共父包,其下约定有子包：model、enums
                        targetPackage: com.penglecode.xmodule.samples.domain.model
                        #领域对象运行时数据源名称
                        runtimeDataSource: product
                        #领域对象内省数据源名称
                        introspectDataSource: product
                        #领域对象数据库内省配置
                        introspectConfig:
                            #强制将数据库中的日期时间字段映射为String类型? 默认为Java8日期/时间对象
                            forceDateTimeAsString: true
                            #强制将数据库中的INT(1)/TINYINT(1)/NUMBER(1)等字段映射为Boolean类型?
                            forceNumber1AsBoolean: true
                            #强制将数据库中的浮点型字段映射为Double类型? 默认为BigDecimal
                            forceDecimalNumericAsDouble: true
                        #领域下面的枚举定义
                        domainEnums:
                            #使用已存在的枚举
                          - domainEnumName: ProductTypeEnum
                            domainEnumClass: com.penglecode.xmodule.samples.product.domain.enums.ProductTypeEnum
                            domainEnumFields: [{fieldType: java.lang.Integer, fieldName: typeCode}, {fieldType: java.lang.String, fieldName: typeName}]
                            #定义新的枚举类型
                          - domainEnumName: ProductAuditStatusEnum
                            domainEnumTitle: 商品审核状态枚举
                            domainEnumFields: [{fieldType: java.lang.Integer, fieldName: statusCode}, {fieldType: java.lang.String, fieldName: statusName}]
                            domainEnumValues: {WAIT_AUDIT: [0, '待审核'], AUDIT_PASSED: [1, '审核通过'], AUDIT_UNPASSED: [2, '审核不通过']}
                            #定义新的枚举类型
                          - domainEnumName: ProductOnlineStatusEnum
                            domainEnumTitle: 商品上下架状态枚举
                            domainEnumFields: [{fieldType: java.lang.Integer, fieldName: statusCode}, {fieldType: java.lang.String, fieldName: statusName}]
                            domainEnumValues: {OFFLINE: [0, '已下架'], ONLINE: [1, '已上架']}
                    #领域实体对象列表
                    domainEntities:
                        #实体对象类名
                      - domainEntityName: ProductInfo
                        #实体对应的数据库表名
                        domainEntityTable: t_product_info
                        #实体对象中文名称
                        domainEntityTitle: 商品信息
                        #实体对象别名(在方法命名、参数/变量命名、URL命名时使用)
                        domainEntityAlias: Product
                        #实体对象运行时数据源
                        runtimeDataSource: product
                        #实体对象内省数据库配置
                        introspectConfig:
                            #强制将数据库中的日期时间字段映射为String类型? 默认为Java8日期/时间对象
                            forceDateTimeAsString: true
                            #强制将数据库中的INT(1)/TINYINT(1)/NUMBER(1)等字段映射为Boolean类型?
                            forceNumber1AsBoolean: true
                            #强制将数据库中的浮点型字段映射为Double类型? 默认为BigDecimal
                            forceDecimalNumericAsDouble: true
                        #领域对象的所有列,其中operatorOnQuery支持eq,like|likeLeft|likeRight,gt|lt|gte|lte,in等
                        domainEntityColumns:
                            - {columnName: 'product_id', columnTitle: '商品ID', primaryKey: true}
                            - {columnName: 'product_name', columnTitle: '商品名称', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'likeRight'}
                            - {columnName: 'product_url', columnTitle: '商品详情URL', columnOnUpsert: true, validateOnUpsert: true}
                            - {columnName: 'product_tags', columnTitle: '商品标签', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'like'}
                            - {columnName: 'product_type', columnTitle: '商品类型', columnOnUpsert: true, validateOnUpsert: true, javaTypeOverride: 'java.lang.Integer', operatorOnQuery: 'eq', decodeEnumType: 'ProductTypeEnum'}
                            - {columnName: 'audit_status', columnTitle: '审核状态', columnOnUpsert: true, validateOnUpsert: true, javaTypeOverride: 'java.lang.Integer', operatorOnQuery: 'in', decodeEnumType: 'ProductAuditStatusEnum'}
                            - {columnName: 'online_status', columnTitle: '上下架状态', columnOnUpsert: true, validateOnUpsert: true, javaTypeOverride: 'java.lang.Integer', operatorOnQuery: 'eq', decodeEnumType: 'ProductOnlineStatusEnum'}
                            - {columnName: 'shop_id', columnTitle: '所属店铺ID', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq'}
                            - {columnName: 'remark', columnTitle: '商品备注', columnOnUpsert: true}
                            - {columnName: 'create_time', columnTitle: '创建时间', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'gte,lte'}
                            - {columnName: 'update_time', columnTitle: '最近更新时间', columnOnUpsert: true, validateOnUpsert: true}

                      - domainEntityName: ProductSpec
                        domainEntityTable: t_product_spec
                        domainEntityTitle: 商品销售规格信息
                        domainEntityAlias: ProductSpec
                        domainEntityColumns:
                            - {columnName: 'product_id', columnTitle: '商品ID', primaryKey: true, operatorOnQuery: 'eq'}
                            - {columnName: 'spec_no', columnTitle: '规格编号', primaryKey: true, operatorOnQuery: 'eq'}
                            - {columnName: 'spec_name', columnTitle: '规格名称', columnOnUpsert: true, validateOnUpsert: true}
                            - {columnName: 'spec_index', columnTitle: '规格顺序', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'eq'}
                            - {columnName: 'remark', columnTitle: '备注', columnOnUpsert: true}
                            - {columnName: 'create_time', columnTitle: '创建时间', columnOnInsert: true, validateOnInsert: true}
                            - {columnName: 'update_time', columnTitle: '最近更新时间', columnOnUpsert: true, validateOnUpsert: true}

                      - domainEntityName: ProductStock
                        domainEntityTable: t_product_stock
                        domainEntityTitle: 商品销售库存信息
                        domainEntityAlias: ProductStock
                        domainEntityColumns:
                            - {columnName: 'product_id', columnTitle: '商品ID', primaryKey: true, operatorOnQuery: 'eq'}
                            - {columnName: 'spec_no', columnTitle: '规格编号', primaryKey: true, operatorOnQuery: 'eq'}
                            - {columnName: 'spec_name', columnTitle: '规格名称', columnOnUpsert: true, validateOnUpsert: true}
                            - {columnName: 'sell_price', columnTitle: '售价', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'lte,gte'}
                            - {columnName: 'stock', columnTitle: '库存', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'lte,gte'}
                            - {columnName: 'remark', columnTitle: '备注', columnOnUpsert: true}
                            - {columnName: 'create_time', columnTitle: '创建时间', columnOnInsert: true, validateOnInsert: true}
                            - {columnName: 'update_time', columnTitle: '最近更新时间', columnOnUpsert: true, validateOnUpsert: true}
                #Mybatis(DAL层)代码部分
                mybatis:
                    xmlMapperConfig:
                        #XxxMapper.xml源码输出项目目录
                        targetProject: src/main/java
                        #XxxMapper.xml所在包名
                        targetPackage: com.penglecode.xmodule.samples.dal.mapper
                    javaMapperConfig:
                        #XxxMapper.java源码输出项目目录
                        targetProject: src/main/java
                        #XxxMapper.java所在包名
                        targetPackage: com.penglecode.xmodule.samples.dal.mapper
                        #当前领域对象的Mapper接口上的数据库名称,默认单库即:'@NamedDatabase("${runtimeDataSource}")'
                        mapperAnnotations: '@NamedDatabase("${runtimeDataSource}")'
                #Service代码部分
                service:
                    #领域服务代码生成配置
                    domain:
                        interfaceConfig:
                            #服务接口源码输出项目目录
                            targetProject: src/main/java
                            #服务接口所在包名
                            targetPackage: com.penglecode.xmodule.samples.domain.service
                        implementConfig:
                            #服务实现源码输出项目目录
                            targetProject: src/main/java
                            #服务实现所在包名
                            targetPackage: com.penglecode.xmodule.samples.domain.service.impl
                    #应用服务代码生成配置
                    app:
                        interfaceConfig:
                            #服务接口源码输出项目目录
                            targetProject: src/main/java
                            #服务接口所在包名
                            targetPackage: com.penglecode.xmodule.samples.app.service
                        implementConfig:
                            #服务实现源码输出项目目录
                            targetProject: src/main/java
                            #服务实现所在包名
                            targetPackage: com.penglecode.xmodule.samples.app.service.impl
                #API代码部分
                api:
                    #基于SpringMVC的Restful-API接口
                    restConfig:
                        #Controller源码输出项目目录
                        targetProject: src/main/java
                        #Controller所在包名
                        targetPackage: com.penglecode.xmodule.examples.codegen.sample.web.controller
                        #Controller继承父类(可以不配置)
                        extendsClass: com.penglecode.xmodule.common.web.servlet.support.RestfulApiResourceSupport
                    dtoConfig:
                        #DTO源码输出项目目录
                        targetProject: src/main/java
                        #DTO所在包名
                        targetPackage: com.penglecode.xmodule.examples.codegen.sample.dto.product