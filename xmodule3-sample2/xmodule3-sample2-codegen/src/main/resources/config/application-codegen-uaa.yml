spring:
    #代码生成配置
    codegen:
        config:
            #模块名称
            product:
                #领域对象配置
                domain:
                    #领域对象公共配置
                    domainCommons:
                        #注释作者
                        commentAuthor: AutoCodeGenerator
                        #领域对象源码输出项目目录
                        targetProject: src/main/java
                        #领域对象源码输出公共父包,其下约定有子包：model、enums
                        targetPackage: com.penglecode.xmodule.samples.uaa.domain.model
                        #领域对象运行时数据源
                        runtimeDataSource: uaa
                        #自省数据源名称
                        introspectDataSource: uaa
                        #领域对象数据库自省配置
                        introspectConfig:
                            #强制将数据库中的日期时间字段映射为String类型?
                            forceDateTimeAsString: true
                            #强制将数据库中的INT(1)/TINYINT(1)等字段映射为Boolean类型?
                            forceNumber1AsBoolean: true
                            #强制将数据库中的浮点型字段映射为Double类型?
                            forceDecimalNumericAsDouble: true
                        #领域下面的枚举定义(这个定义建议集中定义在primaryDomainObject=true的领域对象下面)
                        domainEnums:
                            - enumName: UaaUserTypeEnum
                              enumTitle: 用户类型枚举
                              #枚举字段定义,例如为'type:Integer',则按约定生成typeCode,typeName两个字段,且typeCode的类型为Integer
                              enumFields: 'type:Integer'
                              enumValues: {SYSTEM_USER: [0, '系统用户'], TENANT_USER: [1, '租户用户']}
                            - enumName: UaaUserStatusEnum
                              enumTitle: 用户状态枚举
                              enumFields: 'status:Integer'
                              enumValues: {DISABLED: [0, '禁用状态'], ENABLED: [1, '启用状态']}
                            - enumName: UaaUserSourceTypeEnum
                              enumTitle: 用户来源枚举
                              enumFields: 'status:Integer'
                              enumValues: {UAA_ADMIN: [0, 'UAA用户管理'], UAA_REGISTER: [1, 'UAA用户注册'], UAA_OPENAPI: [2, 'UAA对外接口']}
                            - enumName: UaaRoleTypeEnum
                              enumTitle: 角色类型枚举
                              #枚举字段定义,例如为'type:Integer',则按约定生成typeCode,typeName两个字段,且typeCode的类型为Integer
                              enumFields: 'type:Integer'
                              enumValues: {SYSTEM_ROLE: [0, '系统角色'], TENANT_ROLE: [1, '租户角色']}
                            - enumName: UaaResourceTypeEnum
                              enumTitle: 资源类型枚举
                              #枚举字段定义,例如为'type:Integer',则按约定生成typeCode,typeName两个字段,且typeCode的类型为Integer
                              enumFields: 'type:Integer'
                              enumValues: {SYSTEM_RESOURCE: [0, '系统资源'], TENANT_RESOURCE: [1, '租户资源']}
                            - enumName: UaaResourceActionTypeEnum
                              enumTitle: 资源功能类型枚举
                              #枚举字段定义,例如为'type:Integer',则按约定生成typeCode,typeName两个字段,且typeCode的类型为Integer
                              enumFields: 'type:Integer'
                              enumValues: {ACTION_MENU: [0, '菜单'], ACTION_BUTTON: [1, '按钮']}
                    #聚合对象(如果定义了聚合对象，则后端会生成对应的{aggregateObjectName}AppService)
                    domainAggregates:
                          #聚合对象类名(命名建议aggregateMasterName对应的那个领域对象以Info结尾，为aggregateObjectName让路)
                        - aggregateObjectName: UaaUserAr
                          #聚合对象中文名称
                          aggregateObjectTitle: 商品
                          #聚合对象别名
                          aggregateObjectAlias: Product
                          #聚合对象的主要领域对象名称(指向下面domainObjects列表中的某一个)
                          aggregateMasterName: ProductInfo
                          #聚合对象的从属领域对象列表
                          aggregateObjectSlaves:
                                #聚合对象的从属领域对象(指向下面domainObjects列表中的某一个)
                              - aggregateSlaveName: ProductSpec
                                #主要领域对象与从属领域对象的映射关系(仅支持1:1/1:N)
                                masterSlaveMapping: 'product_id:product_id=1:N'
                                #保存主要领域对象时是否也级联保存从属领域对象
                                cascadingOnUpsert: true
                                #新建主要领域对象时是否也级联新建从属领域对象
                                #cascadingOnInsert: true
                                #新建主要领域对象时是否校验从属领域对象不为空(仅在cascadingOnInsert=true时有效)
                                #validateOnInsert: true
                                #更新主要领域对象时是否也级联更新从属领域对象
                                #cascadingOnUpdate: true
                                #更新主要领域对象时是否校验从属领域对象不为空(仅在cascadingOnUpdate=true时有效)
                                #validateOnUpdate: true
                              - aggregateSlaveName: ProductStock
                                #主要领域对象与从属领域对象的映射关系(仅支持1:1/1:N)
                                masterSlaveMapping: 'product_id:product_id=1:N'
                                #从属领域对象在保存主要领域对象时是否也级联保存
                                cascadingOnUpsert: true
                    #领域对象列表
                    domainObjects:
                        #领域对象类名
                        - domainObjectName: UaaUser
                          #领域对象对应的数据库表名
                          domainTableName: uaa_user
                          #领域对象中文名称
                          domainObjectTitle: UAA用户模型
                          #领域对象别名(定义Service/Controller方法名、url等时用到)
                          domainObjectAlias: User
                          #领域对象运行时数据源
                          runtimeDataSource: uaa
                          #领域对象数据库自省配置
                          introspectConfig:
                              #强制将数据库中的日期时间字段映射为String类型?
                              forceDateTimeAsString: true
                              #强制将数据库中的INT(1)/TINYINT(1)等字段映射为Boolean类型?
                              forceNumber1AsBoolean: true
                              #强制将数据库中的浮点型字段映射为Double类型?
                              forceDecimalNumericAsDouble: true
                          #领域对象的所有列,其中operatorOnQuery支持eq,like|likeLeft|likeRight,gt|lt|gte|lte,in等
                          domainObjectColumns:
                              - {columnName: 'user_id', columnTitle: '用户ID', primaryKey: true}
                              - {columnName: 'user_name', columnTitle: '用户名', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'likeRight'}
                              - {columnName: 'password', columnTitle: '用户密码', columnOnUpsert: true, validateOnUpsert: true}
                              - {columnName: 'mobile', columnTitle: '手机号码', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'like'}
                              - {columnName: 'email', columnTitle: '电子邮箱', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'like'}
                              - {columnName: 'user_type', columnTitle: '用户类型', columnOnInsert: true, validateOnInsert: true, javaTypeOverride: 'java.lang.Integer', operatorOnQuery: 'eq', decodeEnumType: 'UaaUserTypeEnum'}
                              - {columnName: 'user_status', columnTitle: '用户状态', columnOnUpsert: true, validateOnUpsert: true, javaTypeOverride: 'java.lang.Integer', operatorOnQuery: 'in', decodeEnumType: 'UaaUserStatusEnum'}
                              - {columnName: 'source_type', columnTitle: '用户来源', columnOnInsert: true, validateOnInsert: true, javaTypeOverride: 'java.lang.Integer', operatorOnQuery: 'eq', decodeEnumType: 'UaaUserSourceTypeEnum'}
                              - {columnName: 'remark', columnTitle: '用户备注', columnOnUpsert: true}
                              - {columnName: 'tenant_id', columnTitle: '所属租户ID', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq'}
                              - {columnName: 'create_time', columnTitle: '创建时间', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'gte,lte'}
                              - {columnName: 'update_time', columnTitle: '最近更新时间', columnOnUpsert: true, validateOnUpsert: true}

                        - domainObjectName: UaaRole
                          domainTableName: uaa_role
                          domainObjectTitle: UAA角色模型
                          domainObjectAlias: Role
                          domainObjectColumns:
                              - {columnName: 'role_id', columnTitle: '角色ID', primaryKey: true, operatorOnQuery: 'eq'}
                              - {columnName: 'role_name', columnTitle: '角色名称', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'likeRight'}
                              - {columnName: 'role_code', columnTitle: '角色代码', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq'}
                              - {columnName: 'role_type', columnTitle: '角色类型', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq', decodeEnumType: 'UaaRoleTypeEnum'}
                              - {columnName: 'role_desc', columnTitle: '角色描述', columnOnUpsert: true}
                              - {columnName: 'tenant_id', columnTitle: '所属租户ID', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq'}
                              - {columnName: 'create_time', columnTitle: '创建时间', columnOnInsert: true, validateOnInsert: true}
                              - {columnName: 'update_time', columnTitle: '最近更新时间', columnOnUpsert: true, validateOnUpsert: true}

                        - domainObjectName: UaaResource
                          domainTableName: uaa_resource
                          domainObjectTitle: UAA资源模型
                          domainObjectAlias: Resource
                          domainObjectColumns:
                              - {columnName: 'resource_id', columnTitle: '资源ID', primaryKey: true, operatorOnQuery: 'eq'}
                              - {columnName: 'resource_name', columnTitle: '资源名称', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'eq'}
                              - {columnName: 'resource_code', columnTitle: '资源代码', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq'}
                              - {columnName: 'parent_resource_id', columnTitle: '父资源ID', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq'}
                              - {columnName: 'permission_expression', columnTitle: '权限表达式', columnOnUpsert: true, validateOnUpsert: true}
                              - {columnName: 'resource_url', columnTitle: '资源URL', columnOnUpsert: true, validateOnUpsert: true, operatorOnQuery: 'likeRight'}
                              - {columnName: 'resource_type', columnTitle: '资源类型', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq', decodeEnumType: 'UaaResourceTypeEnum'}
                              - {columnName: 'action_type', columnTitle: '功能类型', columnOnInsert: true, validateOnInsert: true, operatorOnQuery: 'eq', decodeEnumType: 'UaaResourceActionTypeEnum'}
                              - {columnName: 'siblings_index', columnTitle: '兄弟节点间的排序值', columnOnUpsert: true, validateOnUpsert: true}
                              - {columnName: 'resource_icon_class', columnTitle: '资源ICON样式class', columnOnUpsert: true, validateOnUpsert: true}
                              - {columnName: 'resource_icon_style', columnTitle: '资源ICON样式css', columnOnUpsert: true, validateOnUpsert: true}
                              - {columnName: 'remark', columnTitle: '资源备注', columnOnUpsert: true}
                              - {columnName: 'create_time', columnTitle: '创建时间', columnOnInsert: true, validateOnInsert: true}
                              - {columnName: 'update_time', columnTitle: '最近更新时间', columnOnUpsert: true, validateOnUpsert: true}
                #Mybatis(DAL层)代码部分
                mybatis:
                    xmlMapperConfig:
                        #XxxMapper.xml源码输出项目目录
                        targetProject: src/main/java
                        #XxxMapper.xml所在包名
                        targetPackage: com.penglecode.xmodule.samples.uaa.dal.mapper
                    javaMapperConfig:
                        #XxxMapper.java源码输出项目目录
                        targetProject: src/main/java
                        #XxxMapper.java所在包名
                        targetPackage: com.penglecode.xmodule.samples.uaa.dal.mapper
                        #当前领域对象的Mapper接口上的数据库名称,默认单库即:'@NamedDatabase("${runtimeDataSource}")'
                        mapperAnnotations: '@NamedDatabase("${runtimeDataSource}")'
                #Service代码部分
                service:
                    #领域服务代码生成配置
                    domain:
                        interfaceConfig:
                            #服务接口源码输出项目目录
                            targetProject: src/main/java
                            #服务接口所在包名
                            targetPackage: com.penglecode.xmodule.samples.uaa.domain.service
                        implementConfig:
                            #服务实现源码输出项目目录
                            targetProject: src/main/java
                            #服务实现所在包名
                            targetPackage: com.penglecode.xmodule.samples.uaa.domain.service.impl
                    #应用服务代码生成配置
                    app:
                        interfaceConfig:
                            #服务接口源码输出项目目录
                            targetProject: src/main/java
                            #服务接口所在包名
                            targetPackage: com.penglecode.xmodule.samples.uaa.app.service
                        implementConfig:
                            #服务实现源码输出项目目录
                            targetProject: src/main/java
                            #服务实现所在包名
                            targetPackage: com.penglecode.xmodule.samples.uaa.app.service.impl
                #API代码部分
                api:
                    #基于SpringMVC的Restful-API接口
                    restConfig:
                        #Controller源码输出项目目录
                        targetProject: src/main/java
                        #Controller所在包名
                        targetPackage: com.penglecode.xmodule.examples.codegen.sample.web.controller
                        #Controller继承父类(可以不配置)
                        extendsClass: com.penglecode.xmodule.common.web.servlet.support.RestfulApiResourceSupport
                    dtoConfig:
                        #DTO源码输出项目目录
                        targetProject: src/main/java
                        #DTO所在包名
                        targetPackage: com.penglecode.xmodule.examples.codegen.sample.dto.product